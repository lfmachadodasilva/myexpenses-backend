// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using lfmachadodasilva.MyExpenses.Api;

namespace lfmachadodasilva.MyExpenses.Api.Migrations
{
    [DbContext(typeof(MyExpensesContext))]
    [Migration("20190813205946_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("lfmachadodasilva.MyExpenses.Api.Models.ExpenseModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Date");

                    b.Property<long>("GroupId");

                    b.Property<long>("LabelId");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<int>("Type");

                    b.Property<decimal>("Value");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.HasIndex("LabelId");

                    b.ToTable("Expense");
                });

            modelBuilder.Entity("lfmachadodasilva.MyExpenses.Api.Models.GroupModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Group");
                });

            modelBuilder.Entity("lfmachadodasilva.MyExpenses.Api.Models.LabelModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("GroupId");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Label");
                });

            modelBuilder.Entity("lfmachadodasilva.MyExpenses.Api.Models.UserGroupModel", b =>
                {
                    b.Property<long>("GroupId");

                    b.Property<long>("UserId");

                    b.Property<long?>("GroupModelId");

                    b.Property<long?>("UserModelId");

                    b.HasKey("GroupId", "UserId");

                    b.HasIndex("GroupModelId");

                    b.HasIndex("UserModelId");

                    b.ToTable("UserGroup");
                });

            modelBuilder.Entity("lfmachadodasilva.MyExpenses.Api.Models.UserModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("lfmachadodasilva.MyExpenses.Api.Models.ExpenseModel", b =>
                {
                    b.HasOne("lfmachadodasilva.MyExpenses.Api.Models.LabelModel", "Group")
                        .WithMany()
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("lfmachadodasilva.MyExpenses.Api.Models.LabelModel", "Label")
                        .WithMany("Expenses")
                        .HasForeignKey("LabelId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("lfmachadodasilva.MyExpenses.Api.Models.UserGroupModel", b =>
                {
                    b.HasOne("lfmachadodasilva.MyExpenses.Api.Models.GroupModel")
                        .WithMany("UserGroups")
                        .HasForeignKey("GroupModelId");

                    b.HasOne("lfmachadodasilva.MyExpenses.Api.Models.UserModel")
                        .WithMany("UserGroups")
                        .HasForeignKey("UserModelId");
                });
#pragma warning restore 612, 618
        }
    }
}
